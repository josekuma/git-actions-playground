name: Ejercicio1

on:

  workflow_dispatch: # Sirve para ejecutar la pipeline mediante un boton en GitHUb Actions
    
  pull_request: # Esto te viene a decir que cada vez que se hace un pull request en github en la rama main y en el patch de hagman-front, se ejecutará esta pipeline
    branches: [ main ] 
    paths: ['hangman-front/**']


jobs: # Aqui se especifica que se van a ejecutar eun conjunto de jobs

  build:
    runs-on: ubuntu-latest # Para hacer este job se necesitará la imagen de ubuntu porque se necesitará esta maquina virtual para generar los siguientes comandos, además en ubuntu tambien se incluye Node.js que lo necesitaremos.

    steps: # A partir de aqui se definen los steps de este job
      - uses: actions/checkout@v3 # Esta action clona el repositorio dentro de la maquina virtual que se ha definido anteriormente.
      - uses: actions/setup-node@v3 # Esto instalará una version especifica dentro de la maquina virtual-
        with: 
          node-version: 16
          cache: 'npm' # Sirve para cachear node.js y que no haga falta de reinstalar en pasos posteriores
          cache-dependency-path: hangman-front/package-lock.json #Este dependency path investiga si el archivo de dentro ha cambiado para actualizar node si la version ha cambiado.
      - name: build
        working-directory: ./hangman-front
        run: |
          npm ci
          npm run build --if-present


  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
     - uses: actions/checkout@v3
     - uses: actions/setup-node@v3
       with:
        node-version: 16
     - name: test
       working-directory: ./hangman-front
       run: |
        npm ci 
        npm test
        
